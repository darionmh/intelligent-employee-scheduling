DROP TABLE IF EXISTS EMPLOYEE_SHIFT_CORRELATION;
DROP TABLE IF EXISTS EMPLOYEE_AVAILABILITY;
DROP TABLE IF EXISTS SHIFTS;
DROP TABLE IF EXISTS EMPLOYEES;
DROP TABLE IF EXISTS SCHEDULES;

CREATE TABLE EMPLOYEES (
    EMPLOYEE_ID int not null PRIMARY KEY,
    LAST_NAME varchar(255) not null,
    FIRST_NAME varchar(255) not null
);

CREATE TABLE SCHEDULES (
    SCHEDULE_ID int AUTO_INCREMENT PRIMARY KEY,
    BEGINNING_DATE DATETIME not null,
    END_DATE DATETIME not null,
    SCHEDULE_DESC VARCHAR(255)
);

CREATE TABLE SHIFTS (
    SHIFT_ID int AUTO_INCREMENT PRIMARY KEY,
    SCHEDULE_ID int not null,
    START_TIME DATETIME not null,
    END_TIME DATETIME not null,
    SHIFT_DESC VARCHAR(255),
    EMPLOYEES_REQ int not null,
    CONSTRAINT FK_SCHEDULE_ID FOREIGN KEY (SCHEDULE_ID)
    REFERENCES SCHEDULES(SCHEDULE_ID)
    ON DELETE CASCADE
);

CREATE TABLE EMPLOYEE_AVAILABILITY (
    ID int AUTO_INCREMENT PRIMARY KEY,
    EMPLOYEE_ID int not null,
    START_TIME DATETIME not null,
    END_TIME DATETIME not null,
    CONSTRAINT FK_EMPLOYEE_ID_AVAILABILITY FOREIGN KEY (EMPLOYEE_ID)
    REFERENCES EMPLOYEES(EMPLOYEE_ID)
    ON DELETE CASCADE
);

CREATE TABLE EMPLOYEE_SHIFT_CORRELATION (
    EMPLOYEE_ID int not null,
    SHIFT_ID int not null,
    CONSTRAINT FK_SHIFT_ID FOREIGN KEY (SHIFT_ID)
    REFERENCES SHIFTS(SHIFT_ID)
    ON DELETE CASCADE,
    CONSTRAINT FK_EMPLOYEE_ID_SHIFT FOREIGN KEY (EMPLOYEE_ID)
    REFERENCES EMPLOYEES(EMPLOYEE_ID)
    ON DELETE CASCADE
);